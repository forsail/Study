<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools"
          package="cn.steve.study">

    <!-- 添加读取sd卡的权限 -->
    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
    <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS"/>
    <uses-permission android:name="android.permission.WAKE_LOCK"/>
    <uses-permission android:name="android.permission.GET_TASKS"/>
    <!-- 获取网络状态  -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <!-- 访问网络 -->
    <uses-permission android:name="android.permission.INTERNET"/>
    <!-- 获取WiFi状态 -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>
    <!-- 允许程序写入外部存储,如SD卡上写文件 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.WRITE_SETTINGS"/>
    <!-- 读取电话状态 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <uses-permission android:name="android.permission.CALL_PHONE"/>
    <!-- 获取精确位置 GPS芯片接收卫星的定位信息,定位精度达10米以内 -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <!-- 通过WiFi或移动基站的方式获取用户错略的经纬度信息 -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
    <!-- 获取模拟定位信息 -->
    <uses-permission android:name="android.permission.ACCESS_MOCK_LOCATION"/>
    <uses-permission android:name="android.permission.ACCESS_GPS"/>
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.CAMERA2" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <application
            android:name="cn.steve.UILApplication"
            android:allowBackup="true"
            android:icon="@drawable/app"
            android:label="@string/app_name"
            android:theme="@style/AppTheme"
            tools:replace="android:allowBackup">

        <meta-data
                android:name="ProductFlavorName"
                android:value="${productFlavor}"/>

        <meta-data
                android:name="com.baidu.lbsapi.API_KEY"
                android:value="mpegPto8tGulBS1ecPRfbwjuVkhd3LNC"/>

        <!-- 对话框demo -->
        <activity android:name="cn.steve.alertDialog.AlertDialogActivity">
        </activity>
        <activity android:name="cn.steve.alertDialog.ShareSuccessActivity">
        </activity>

        <!-- fragment(碎片)demo -->
        <activity android:name="cn.steve.fragment.MyFragmentActivity"/>

        <!-- test the new click event -->
        <activity android:name="cn.steve.click_xml.MXMLclick"/>

        <!-- customer dialogue -->
        <activity android:name="cn.steve.customdialog.MainActivity_Dailoge">
        </activity>
        <!-- 简单的dialog的包测试 -->
        <activity android:name="cn.steve.customdialog.SimpleDialog">
        </activity>

        <!-- screen dialog -->
        <activity android:name="cn.steve.customdialog.FullScreenDialogActivity">
        </activity>

        <!-- signature  simple  demo -->
        <activity android:name="cn.steve.signature.Activity_Signature"/>

        <!-- customer paint view -->
        <activity android:name="cn.steve.customview.CustomerPaintActivity"/>

        <!-- 测试view的context的规则 -->
        <activity android:name="cn.steve.contextmean.ContextActivity"/>
        <activity android:name="cn.steve.contextmean.ContextActivity_2"/>

        <!--
             浮动的输入框，输入密码用户名会动态的变化,exported属性用作命令行启动 
        	这个API的使用最低需要时11
        -->
        <activity
                android:name="cn.steve.floatLabelLayout.FloatLabelActivity"
                android:exported="true"/>

        <!-- simple  example of welcome  activity -->
        <activity android:name="cn.steve.simpleWelcome.WelcomeActivity"/>
        <activity android:name="cn.steve.simpleWelcome.LoginActivity"/>

        <!-- 类似于UC浏览器的底部菜单a bottom menu similar to the UC Browser -->
        <activity android:name="cn.steve.bottomMenu.BottomMenuActivity">
        </activity>

        <!-- 修改的UC菜单，使得菜单替换成了文本，文本内容滚动 -->
        <activity android:name="cn.steve.bottomtext.BottomTextActivity"/>

        <!-- 下拉列表 -->
        <activity android:name="cn.steve.spinnerdroplayout.SpinnerDropActivity"/>

        <!-- viewFlipper -->
        <activity android:name="cn.steve.viewflipper.AcitvityViewFlipper"/>
        <activity android:name="cn.steve.asynctask.AsyncTaskMainActivity"/>

        <!-- the touch events demo -->
        <activity android:name="cn.steve.touchevent.TouchMainActivity"/>
        <!-- IO的操作 -->
        <activity android:name="cn.steve.fileIO.MainActivity"/>
        <!-- weak 弱引用 -->
        <activity android:name="cn.steve.weakreferencehandler.WeakReferenceHandlerMainActivity"/>
        <!-- handler执行线程 -->
        <activity android:name="cn.steve.handler.HandlerActivity"/>
        <activity android:name="cn.steve.handler.HandlerActivity02"/>
        <!-- webview -->
        <activity android:name="cn.steve.webview.simple.WebViewActivity">

        </activity>
        <activity android:name="cn.steve.webview.simple.WebViewTestActivity">

        </activity>
        <!-- broadcast -->
        <activity android:name="cn.steve.broadcast.NormalBroadCastActivity"/>
        <activity android:name="cn.steve.broadcast.BroadCastMainActivity"/>

        <receiver android:name="cn.steve.broadcast.NormalBCReceiverA"/>
        <receiver android:name="cn.steve.broadcast.NormalBCReceiverB"/>

        <activity android:name="cn.steve.broadcast.OrderBroadCastActivity"/>

        <receiver android:name="cn.steve.broadcast.OrderBCReceiverA"/>
        <receiver android:name="cn.steve.broadcast.OrderBCReceiverB"/>

        <activity android:name="cn.steve.service.ServiceMainActivity"/>

        <service android:name="cn.steve.service.MsgService"/>

        <activity android:name="cn.steve.uicommunicate.UIActivity">

        </activity>
        <activity android:name="cn.steve.listview.cache.ListViewMainActivity"/>
        <!-- 水平循环滚动 -->
        <activity android:name="cn.steve.gallery.HorizontalScrollViewMainActivity"/>
        <!-- Universal image loader -->
        <activity android:name="cn.steve.imageloader.ImageLoaderActivity"/>
        <!-- Event Bus -->
        <activity android:name="cn.steve.eventbus.EventBusActivity">
        </activity>

        <!-- asynchttp请求的demo -->
        <activity android:name="cn.steve.http.asynchttp.AsyncHttpActivity">
        </activity>
        <activity android:name="cn.steve.http.okhttp.OkHttpActivity"/>

        <!-- 单选控件 -->
        <activity android:name="cn.steve.radiobutton.RadioButtonMainActivity"/>
        <activity android:name="cn.steve.gallery.GalleryMainActivity"/>

        <!-- 使用gallery实现时期滑动选择 -->
        <activity android:name="cn.steve.gallery.MyGalleryMainActivity"/>

        <!-- gson使用demo -->
        <activity android:name="cn.steve.gson.GsonMainActivity">
        </activity>

        <!-- 屏幕坐标 -->
        <activity android:name="cn.steve.viewcoordinate.ViewCoordinateActivity"/>

        <!-- 截屏监听 -->
        <activity android:name="cn.steve.screenshot.ScreenShotActivity"/>

        <!-- 百分比布局 -->
        <activity android:name="cn.steve.percentlayout.PercentLayoutActivity"/>

        <!-- 画圆 -->
        <activity android:name="cn.steve.circle.CircleMianActivity"/>

        <!-- recyclerview -->
        <activity android:name="cn.steve.recyclerview.SimpleRecyclerViewMainActivity">

        </activity>
        <activity android:name="cn.steve.recyclerview.multipleitem.MultipleItemMainActivity"/>
        <activity android:name="cn.steve.recyclerview.itemanimator.RecyclerViewItemAnimatorActivity">
        </activity>

        <!-- 检测手机卡 -->
        <activity android:name="cn.steve.simcardnet.SimCardMainActivity">
        </activity>

        <!-- activity的生命周期 -->
        <activity android:name="cn.steve.activitylifecycle.LifeActivityA">
        </activity>
        <activity android:name="cn.steve.activitylifecycle.LifeActivityB"/>
        <activity android:name="cn.steve.activitylifecycle.LifeCircleActivity">
        </activity>

        <!-- animator demo -->
        <activity android:name="cn.steve.animator.AnimatorActivity">
        </activity>

        <!-- audio demo -->
        <activity android:name="cn.steve.audiomanager.AudioManagerActivity"/>

        <!-- 修改系统亮度的demo -->
        <activity android:name="cn.steve.brightness.BrightnessActivity"/>
        <activity android:name="cn.steve.brightness.SeekBarBrightnessActivity"/>

        <!-- 手机网络状态的监听 -->
        <activity android:name="cn.steve.datatraffic.DataTrafficActivity"/>

        <receiver android:name="cn.steve.datatraffic.NetConnectBroadCastReceiver"/>

        <!-- 当前设备的一些硬件信息 -->
        <activity android:name="cn.steve.deviceinfo.DeviceInfoActivity">
        </activity>

        <!-- 悬浮窗demo -->
        <activity android:name="cn.steve.floatingview.FloatingMainActivity"/>

        <!-- 流式布局的demo -->
        <activity android:name="cn.steve.flowlayout.FlowLayoutMainActivity"/>

        <!-- APP运行在前后台的判断,只适用于Android4.0以上 -->
        <activity android:name="cn.steve.forebackground.ForeGroundMainActivity"/>

        <!-- 运行在前后台的测试 -->
        <activity android:name="cn.steve.forebackground.ForeGroundActivityA"/>
        <activity android:name="cn.steve.click_xml.LayoutClickableMainActivity"/>

        <!-- 原生的下拉刷新控件 -->
        <activity android:name="cn.steve.swiperefreshlayout.SwipeRefreshLayoutActivity">
        </activity>

        <!-- 魅族的适配 -->
        <activity android:name="cn.steve.flyme.FlymeAdapterActivity">
        </activity>

        <!-- 通过UIL为viewgroup设置背景图片 -->
        <activity android:name="cn.steve.imageloader.UILGroupDisplayActivity"/>

        <!-- 详解 LayoutInflater的含义 -->
        <activity android:name="cn.steve.layoutinflater.LayoutInflaterActivity">
        </activity>
        <activity android:name="cn.steve.layoutinflater.InflaterGoneViewActivity">
        </activity>
        <!-- 测试imageview的缩放比例区分 -->
        <activity android:name="cn.steve.scaletype.ScaleTypeActivity">
        </activity>

        <!-- RxAndroid的demo -->
        <activity android:name="cn.steve.rxandroid.RXJavaActivity">
        </activity>
        <activity android:name="cn.steve.rxandroid.RXAndroidActivity">
        </activity>
        <!-- contentobserver的例子 -->
        <activity android:name="cn.steve.contentobserver.ContentObserverActivity">
        </activity>
        <!-- 测试自定义listview中item的高度 -->
        <activity android:name="cn.steve.listview.customitemheight.CustomItemHeightActivity">
        </activity>
        <!-- 测试textview背景模糊效果 -->
        <activity android:name="cn.steve.blurre.BlurreActivity">
        </activity>
        <!-- 用renderscript进行模糊 -->
        <activity android:name="cn.steve.blurre.renderscript.RenderScriptMainActivity">
        </activity>
        <activity android:name="cn.steve.blurre.BlurringViewActivity">
        </activity>
        <activity android:name="cn.steve.blurre.GpuBlurActivity">
        </activity>

        <!-- progressbar的demo -->
        <activity android:name="cn.steve.progressbar.ProgressMainActivity"/>
        <activity android:name="cn.steve.progressbar.AbCircleProgressBarActivity"/>

        <!-- recyclerview 的滑动demo -->
        <activity android:name="cn.steve.recyclerview.itemtouchhelper.ItemTouchHelperMainActivity">
        </activity>

        <!-- toolbar的使用demo,如果需要全局的话，可以把这个主题的设置放到Application处 -->
        <activity
                android:name="cn.steve.toolbar.ToolBarMainActivity"
                android:theme="@style/Theme.AppCompat.NoActionBar">
        </activity>

        <!-- material design 的demo -->
        <activity android:name="cn.steve.materialdesign.MaterialListActivity">
        </activity>
        <activity
                android:name="cn.steve.materialdesign.TranslucentBarColorActivity"
                android:theme="@style/ColorTranslucentTheme"/>
        <activity
                android:name="cn.steve.materialdesign.TranslucentBarImageActivity"
                android:theme="@style/ImageTranslucentTheme"/>
        <activity android:name="cn.steve.materialdesign.TabLayoutActivity">
        </activity>

        <!-- MVP的demo -->


        <!-- 可以将一些随着类存在的静态量放到静态代码块内 -->
        <activity android:name="cn.steve.staticactivity.StaticActivity"/>

        <!-- 下拉刷新 -->
        <activity android:name="cn.steve.listview.pulltorefresh.PullToRefreshActivity">
        </activity>

        <!-- 注解的测试 -->
        <activity android:name="cn.steve.viewinjection.ViewInjectionTestActivity"/>

        <!-- 个人中心下拉效果 -->
        <activity android:name="cn.steve.pullscrollview.PullScrollViewActivity">
        </activity>

        <!-- 官方的material design中的 -->
        <activity
                android:name="cn.steve.coordinatorlayout.CoordinatorLayoutActivity"
                android:theme="@style/AppNoActionBarTheme">

        </activity>

        <!-- 滑动有回弹的效果 -->
        <activity android:name="cn.steve.pullscrollview.OverScrollViewActivity">
        </activity>

        <!-- 改造下拉滑动放大 -->
        <activity android:name="cn.steve.pullscrollview.PullEnlargeScrollViewActivity">
        </activity>

        <!-- 下拉放大，上拉收缩 -->
        <activity android:name="cn.steve.pullscrollview.MiniPullPushScrollViewActivity">
        </activity>

        <!-- 动态改变控件的高度 -->
        <activity android:name="cn.steve.viewcoordinate.LayoutParamsScrollActivity">
        </activity>

        <!-- 下拉方法的listview和scrollview -->
        <activity
                android:name="cn.steve.pulltozoomviewdemo.MainActivity"
                android:label="@string/app_name">
        </activity>
        <activity android:name="cn.steve.pulltozoomviewdemo.PullToZoomListActivity"/>
        <activity android:name="cn.steve.pulltozoomviewdemo.PullToZoomScrollActivity"/>
        <activity android:name="cn.steve.pulltozoomviewdemo.recyclerview.PullToZoomRecyclerActivity"/>

        <!-- 仿造微信的聊天界面 -->
        <activity
                android:name="cn.steve.wechat.WeChatMainActivity"
                android:theme="@android:style/Theme.NoTitleBar">
        </activity>
        <!-- recyclerview版 -->
        <activity android:name="cn.steve.wechat.recycleview.WeChatMainActivity">
        </activity>
        <!-- view的宽高获取 -->
        <activity android:name="cn.steve.viewcoordinate.ObtainWidthHeightActivity">
        </activity>
        <activity android:name="cn.steve.listview.robot.OnlineActivity">
        </activity>
        <!-- 测试webview的高级用法 -->
        <activity android:name="cn.steve.webview.advanced.AdvancedWebViewTestActivity">
        </activity>
        <!-- 测试自定义drawable -->
        <activity android:name="cn.steve.drawable.CustomDrawableMainActivity">
        </activity>
        <!-- Dagger 的demo -->
        <activity android:name="cn.steve.dagger.demo.DaggerMainActivity">
        </activity>
        <activity android:name="cn.steve.dagger.DaggerClassRoomActivity">
        </activity>

        <!-- retrofit -->
        <activity android:name="cn.steve.retrofit.RetrofitMainActivity">
        </activity>
        <activity android:name="cn.steve.retrofit.RetrofitRxJavaActivity">
        </activity>

        <!-- MVP -->
        <activity android:name="cn.steve.mvp.simple.view.MVPActivity">
        </activity>
        <!-- Class Loader -->
        <activity android:name="cn.steve.classloader.LoaderMainActivity">
        </activity>
        <!-- 消息盒子，采用MVP的模式 -->
        <activity android:name="cn.steve.mvp.campaign.CampaignActivity">
        </activity>

        <!-- viewpager demo -->
        <activity android:name="cn.steve.viewpager.ViewPagerMainActivity">
        </activity>
        <!-- 测试输入电话，自动格式化 -->
        <activity android:name="cn.steve.edittext.EditTextViewMainActivity">
        </activity>
        <!-- 圆形头像 -->
        <activity android:name="cn.steve.circleimageview.CircleImageViewActivity">
        </activity>
        <!-- 悬浮窗 -->
        <activity android:name="cn.steve.floatingview.simple.FloatingActivity">
        </activity>

        <!-- touch delegate -->
        <activity android:name="cn.steve.touchdelegate.TouchDelegateActivity">
        </activity>

        <!-- layout change animation -->
        <activity android:name="cn.steve.animator.layoutchange.LayoutChangesActivity">
        </activity>
        <activity android:name="cn.steve.fragment.SimpleFragmentActivity">
        </activity>
        <!-- zxing二维码 -->
        <activity android:name="cn.steve.zxing.ZxingActivity">
        </activity>
        <!-- bottombar -->
        <activity android:name="cn.steve.bottombar.BottomBarActivity">
        </activity>
        <!-- FragmentTabHost -->
        <activity android:name="cn.steve.fragmenttabhost.FragmentTabHostActivity">
        </activity>
        <!-- DES加密 -->
        <activity android:name="cn.steve.des.DesMainActivity">
        </activity>
        <!-- menu展现 -->
        <activity
                android:name="cn.steve.menu.MenuMainActivity"
                android:label="@string/title_activity_menu_main"
                android:theme="@style/AppTheme.NoActionBar">
        </activity>
        <!-- 仿造微信选择照片 -->
        <activity android:name="cn.steve.imagepicker.ImagePickerActivity">
        </activity>
        <!-- 官方的BottomSheet -->
        <activity
                android:name="cn.steve.bottomsheet.BottomSheetSimpleActivity"
                android:theme="@style/AppNoActionBarTheme">
        </activity>
        <!-- bottom sheet -->
        <activity
                android:name="cn.steve.share.simple.BottomSheetShareActivity"
                android:theme="@style/Theme.AppCompat.Light.NoActionBar">

        </activity>
        <!-- 打印定制的log -->
        <activity android:name="cn.steve.log.LogActivity">
        </activity>
        <!-- 测试activity和fragment的生命周期关系，兼带测试一些内存问题 -->
        <!-- google 官方的响应式编程库agera测试 -->
        <activity android:name="cn.steve.agera.AgeraMainActivity">
        </activity>
        <!-- 最简单的例子 -->
        <activity android:name="cn.steve.agera.AgeraSimpleActivity">
        </activity>

        <!-- reflect -->
        <activity android:name="cn.steve.reflect.ReflectMainActivity">
        </activity>
        <activity android:name="cn.steve.reflect.ReflectSubActivity">
        </activity>
        <!-- Flexbox -->
        <activity android:name="cn.steve.flexbox.FlexboxMainActivity">
        </activity>
        <!-- DeepLink -->
        <activity
                android:name="cn.steve.deeplink.DeepLinkActivity"
                android:exported="true"
                android:launchMode="singleTask">
            <intent-filter android:label="@string/app_name">
                <action android:name="android.intent.action.MAIN"/>
                <action android:name="android.intent.action.VIEW"/>

                <category android:name="android.intent.category.DEFAULT"/>
                <category android:name="android.intent.category.BROWSABLE"/>
                <!-- Accepts URIs that begin with "http://recipe-app.com/recipe" -->
                <data
                        android:host="lvmama.android.com"
                        android:pathPrefix="/lvmama"
                        android:scheme="mamalv"/>
            </intent-filter>
        </activity>
        <activity android:name="cn.steve.deeplink.APKCommentReadActivity">
        </activity>
        <!-- IPC -->
        <activity android:name="cn.steve.ipc.remoteprogress.IPCMainActivity">
        </activity>
        <activity
                android:name="cn.steve.ipc.remoteprogress.IPCSecondActivity"
                android:process=":remote"/>
        <activity android:name="cn.steve.pulltozoomviewdemo.MyPullZoomViewDemo">
        </activity>

        <!-- Handler -->
        <activity android:name="cn.steve.uicommunicate.ThreadUpdateUiActivity">

        </activity>

        <!-- IntentService -->
        <activity android:name="cn.steve.service.IntentServiceActivity">
        </activity>

        <service
                android:name="cn.steve.service.MyIntentService"
                android:exported="false">
        </service>

        <!-- 测试基层toolbar -->
        <activity
                android:name="cn.steve.toolbar.ToolBarNeedActivity"
                android:theme="@style/AppNoActionBarTheme">
        </activity>

        <!-- schemel control test -->
        <activity android:name="cn.steve.deeplink.SchemeControlActivity">
        </activity>

        <!-- view drag helper -->
        <activity android:name="cn.steve.viewdraghelper.ViewDragHelperActivity">
        </activity>

        <!-- notification -->
        <activity android:name="cn.steve.notification.NotificationHandlerActivity">
        </activity>

        <!-- TaskStackBuilder -->
        <activity android:name="cn.steve.notification.TaskStackActivity">
        </activity>
        <activity
                android:name="cn.steve.notification.ResultActivity"
                android:parentActivityName="cn.steve.notification.NotificationHandlerActivity">
            <meta-data
                    android:name="android.support.PARENT_ACTIVITY"
                    android:value="cn.steve.notification.NotificationHandlerActivity"/>
        </activity>
        <activity android:name="cn.steve.notification.NotificationStatusActivity">
        </activity>

        <!-- ContentProvider demo -->
        <!--<provider-->
        <!--android:name="cn.steve.contentprovider.ConfigContentProvider"-->
        <!--android:authorities="cn.steve.config.provider"-->
        <!--android:enabled="true"-->
        <!--android:exported="true">-->
        <!--</provider>-->

        <!-- 按钮点击效果和跳转效果 -->
        <activity android:name="cn.steve.animator.CircularAnimUtilActivity">
        </activity>
        <!-- Gson测试 -->
        <activity android:name="cn.steve.gson.GsonPojoActivity">
        </activity>
        <!-- content provider -->
        <activity android:name="cn.steve.contentprovider.ContentProviderActivity">
        </activity>

        <!-- AIDL -->
        <service
                android:name="cn.steve.ipc.aidl.simple.ComputeService"
                android:process=":aidlService">
            <intent-filter>
                <action android:name="cn.steve.aidl.ComputeService"/>
            </intent-filter>
        </service>

        <activity android:name="cn.steve.ipc.aidl.simple.AIDLActivity">
        </activity>

        <!-- messenger -->
        <service
                android:name="cn.steve.ipc.messenger.MessengerService"
                android:enabled="true"
                android:exported="true"
                android:process=":remotemessenger">
        </service>

        <activity android:name="cn.steve.ipc.messenger.MessengerActivity">
        </activity>

        <service
                android:name="cn.steve.ipc.socket.TCPServerService"
                android:enabled="true"
                android:exported="true"
                android:process=":remote">
        </service>
        <!-- socket -->
        <activity android:name="cn.steve.ipc.socket.TCPClientActivity">
        </activity>

        <!-- aidl with observer -->
        <service
                android:name="cn.steve.ipc.aidl.observer.BookManagerService"
                android:enabled="true"
                android:exported="true"
                android:process=":remote">
        </service>

        <activity android:name="cn.steve.ipc.aidl.observer.BookManagerActivity">
        </activity>

        <!-- lazy fragment -->
        <activity android:name="cn.steve.viewpager.LazyFragmentActivity">
        </activity>
        <!-- bundler -->
        <activity android:name="cn.steve.ipc.bundle.BundleActivity">
        </activity>
        <activity android:name="cn.steve.ipc.bundle.BundleActivityB">
        </activity>
        <!-- call phone -->
        <activity android:name="cn.steve.phone.PhoneActivity">
        </activity>

        <!-- 监听电话拨打状态 -->
        <receiver
                android:name="cn.steve.phone.PhoneStateReceive"
                android:enabled="true"
                android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.PHONE_STATE"/>
                <action android:name="android.intent.action.NEW_OUTGOING_CALL"/>
            </intent-filter>
        </receiver>

        <activity android:name="cn.steve.share.view.AnFQNumEditTextActivity">
        </activity>

        <!-- 时间价格表 -->
        <activity android:name="cn.steve.dateCalendar.DatePickerActivity">
        </activity>

        <!-- activity animator -->
        <activity android:name="cn.steve.animator.activityanimator.ActivityAnimatorMainActivity">
        </activity>
        <activity android:name="cn.steve.animator.activityanimator.LollipopAnimatorActivity">
        </activity>
        <activity android:name="cn.steve.animator.activityanimator.LollipopAnimatorDetailActivity">
        </activity>
        <activity android:name="cn.steve.animator.activityanimator.PreLollipopAnimatorActivity">
        </activity>
        <activity android:name="cn.steve.animator.activityanimator.PreLollipopAnimatorDetailActivity">
        </activity>
        <!-- item可以被折叠-->
        <activity android:name="cn.steve.recyclerview.expandable.ExpandableRecyclerViewActivity">
        </activity>
        <activity android:name="cn.steve.map.BaiduMapActivity">

        </activity>
        <activity android:name="cn.steve.map.LocationDemo">

        </activity>

        <service
                android:name="com.baidu.location.f"
                android:enabled="true"
                android:process=":remote">
        </service>
        <!-- 多渠道打包 -->
        <activity android:name="cn.steve.flavors.ProductFlavorMainActivity">

        </activity>
        <!--  自定义 toast -->
        <activity android:name="cn.steve.toast.ToastyActivity">

        </activity>
        <!-- 官方 BottomNavigationView-->
        <activity android:name="cn.steve.bottombar.BottomNavigationViewActivity">

        </activity>
        <!--task-->
        <activity android:name="cn.steve.task.TaskActivityA">

        </activity>
        <activity android:name="cn.steve.task.TaskActivityB"
                >
        </activity>
        <activity android:name="cn.steve.task.TaskActivityC">
        </activity>

        <!--launchmodel and task-->
        <activity android:name="cn.steve.task.launchmodel.LaunchModelMainActivity">

        </activity>
        <activity
                android:name="cn.steve.task.launchmodel.SingleInstanceActivity"
                android:launchMode="singleInstance"
                />
        <activity
                android:name="cn.steve.task.launchmodel.SingleTaskActivity"
                android:launchMode="singleTask"
                />
        <activity
                android:name="cn.steve.task.launchmodel.SingleTopActivity"
                android:launchMode="singleTop"
                />
        <activity
                android:name="cn.steve.task.launchmodel.StandardActivity"
                android:launchMode="standard"
                />

        <activity android:name="cn.steve.zip.ZipActivity">

        </activity>

        <activity android:name="cn.steve.activityresult.ActivityResultActivity">

        </activity>
        <activity android:name="cn.steve.activityresult.ActivityResultActivityB">

        </activity>

        <activity android:name="cn.steve.floatingnavigation.NavigationMainActivity">

        </activity>

        <activity android:name="cn.steve.hook.HookActivity">

        </activity>

        <activity android:name="cn.steve.webview.simple.WebMainActivity">

        </activity>

        <activity android:name="cn.steve.camera.CameraActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <activity android:name="cn.steve.camera.CameraActivity2">

        </activity>

        <provider
                android:name="android.support.v4.content.FileProvider"
                android:authorities="${applicationId}.provider"
                android:exported="false"
                android:grantUriPermissions="true">
            <meta-data
                    android:name="android.support.FILE_PROVIDER_PATHS"
                    android:resource="@xml/provider_paths"/>
        </provider>

    </application>

</manifest>